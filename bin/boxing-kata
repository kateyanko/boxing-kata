#!/usr/bin/env ruby

require "bundler/setup"
require "boxing/kata/boxing_kata"

Boxing::Kata::report


# **Importing family preferences**

# _As a Beam Shipping Manager_<br>
# _In order to ship perks_<br>
# _I want to add family member brush preferences_<br>

# To begin the boxing process the shipping manager must import family data.  When the system receives the input file then the brush color counts will be displayed in the format below.

# ```
# BRUSH PREFERENCES
# blue: 2
# green: 2
# pink: 1

require "csv" 
require "json"  

data = CSV.read("../spec/fixtures/family_preferences.csv", { encoding: "UTF-8", headers: true, header_converters: :symbol, converters: :all})

hashed_data = data.map { |d| d.to_hash }

$contract_date = hashed_data.map {|x| x.values[4]}

for i in $contract_date do 
  if i != nil 
    $primary_contract_date = i
  end
end
puts $primary_contract_date.strftime("%Y-%m-%d")

colors = hashed_data.map {|x| x.values[2]}

$colors_frequency_hash = {}

colors.each do |x|
    count = colors.count(x)
    $colors_frequency_hash[x] = count  
  end

$blue = $colors_frequency_hash["blue"]
$pink = $colors_frequency_hash["pink"]
$green = $colors_frequency_hash["green"]
$done1 = 1

# p "BRUSH PREFERENCES"
# p "blue: " + $blue.to_s
# p "pink: " + $pink.to_s
# p "green: " + $green.to_s

# **Starter boxes**

def print_starter_boxes

until $blue <= 2
  puts "STARTER BOX"
  puts "2 blue brushes"
  puts  "2 blue replacement heads"
  $blue -= 2
  puts $primary_contract_date.strftime("%Y-%m-%d")
end

puts "STARTER BOX"
puts $blue.to_s + " blue brushes"
puts  $blue.to_s + " blue replacement heads"
puts $primary_contract_date.strftime("%Y-%m-%d")

until $green <= 2
  puts "STARTER BOX"
  puts "2 green brushes"
  puts  "2 green replacement heads"
  $green -= 2
  puts $primary_contract_date.strftime("%Y-%m-%d")
end

puts "STARTER BOX"
puts $green.to_s + " green brushes"
puts  $green.to_s + " green replacement heads"
puts $primary_contract_date.strftime("%Y-%m-%d")

until $pink <= 2
  puts "STARTER BOX"
  puts "2 pink brushes"
  puts  "2 pink replacement heads"
  $pink -= 2
  puts $primary_contract_date.strftime("%Y-%m-%d")
end

puts "STARTER BOX"
puts $pink.to_s + " pink brushes"
puts  $pink.to_s + " pink replacement heads"
puts $primary_contract_date.strftime("%Y-%m-%d")

$done1 = 1
end

# print_starter_boxes

if colors.count.to_i < 1
  puts "NO STARTER BOXES GENERATED"
end


# **Refills**

$blue_replacement = $colors_frequency_hash["blue"]
$pink_replacement = $colors_frequency_hash["pink"]
$green_replacement = $colors_frequency_hash["green"]

$replacement_colors = $blue_replacement.to_i + $pink_replacement.to_i + $green_replacement.to_i

def generate_refill_boxes
  if $done1 == 0
  puts "PLEASE GENERATE STARTER BOXES FIRST"
  else 
    pack_refill_boxes
  end
end

def pack_refill_boxes
  if $replacement_colors <= 4
    puts "REFILL BOX"
    puts $pink_replacement.to_s + " pink replacement heads"
    puts  $green_replacement.to_s + " green replacement heads"
    puts  $blue_replacement.to_s + " blue replacement heads"
  else 
    pack_multiple_refill_boxes

end
end
#rememeber to change done1 to 0 when you're done!


def pack_multiple_refill_boxes 
  while $pink_replacement.to_i >= 4
    puts "REFILL BOX"
    puts "4 pink replacement heads"
    $pink_replacement -= 4
  end

  $pink_leftover = $pink_replacement

  while $green_replacement.to_i >= 4
    puts "REFILL BOX"
    puts "4 green replacement heads"
    $green_replacement -= 4
  end
    $green_leftover = $green_replacement
  while $blue_replacement.to_i >= 4
    puts "REFILL BOX"
    puts "4 blue replacement heads"
    $blue_replacement -= 4
  end
    $blue_leftover = $blue_replacement
if $leftovers != 0 
      leftover_boxes
    end
end

$leftovers = {blue: $blue_leftover, pink: $pink_leftover, green: $green_leftover}

def leftover_boxes
  
  $box_capacity  = 4

  if $blue_leftover < 4 && $blue_leftover != 0
    puts "REFILL BOX"
    puts $blue_leftover.to_s + " blue replacement heads"
    $box_capacity = $box_capacity - $blue_leftover
    $blue_leftover = 0

    if $leftovers != 0 && $box_capacity != 0 
        if $green_leftover < $box_capacity
          puts $green_leftover.to_s + " green replacement heads"
          $box_capacity = $box_capacity - $green_leftover
          $green_leftover = 0
          if $box_capacity != 0 
            if $pink_leftover < $box_capacity
              puts $pink_leftover.to_s + " pink replacement heads"
              $box_capacity = $box_capacity - $pink_leftover
              $pink_leftover = 0
            end
          else 
            leftover_boxes
          end
        else
          puts $box_capacity.to_s + " green replacement heads"
          $green_leftover = $green_leftover - $box_capacity
          leftover_boxes
        end
      end
    end

  if $green_leftover < 4 && $green_leftover != 0
    puts "REFILL BOX"
          puts $green_leftover.to_s + " green replacement heads"
          $box_capacity = $box_capacity - $green_leftover
          $green_leftover = 0
          if $leftovers != 0 && $box_capacity != 0 
              if $pink_leftover < $box_capacity
                puts $pink_leftover.to_s + " pink replacement heads"
                $box_capacity = $box_capacity - $pink_leftover
                $pink_leftover = 0
              else 
                puts $box_capacity.to_s + " pink replacement heads"
                $pink_leftover = $pink_leftover - $box_capacity
                leftover_boxes
              end
            end
          end
    
if $pink_leftover < 4 && $pink_leftover != 0
puts "REFILL BOX"
  puts $pink_leftover.to_s + " pink replacement heads"
  $pink_leftover = 0
end
end


# generate_refill_boxes

# **Scheduling**

# _As a Beam Shipping Manager_<br>
# _In order to ship perks_<br>
# _I want to schedule boxes for shipping_<br>

# Members should receive perks throughout the length of the contract (1 year).  The shipping date is based on the contract effective date of the primary insured family member.  Starter boxes should be scheduled on the contract effective date.  Refills are scheduled every 90 days after that for the remainder of the year. When boxes are generated then each box should have a line appended with its schedule.

# Example for a starter box:
# ```
# STARTER BOX
# 2 green brushes
# 2 green replacement head
# Schedule: 2018-01-01
# ```

# Example for a refill box:
# ```
# REFILL BOX
# 1 pink replacement head
# Schedule: 2018-04-01, 2018-06-30, 2018-09-28


